"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  leadingTrim: () => leadingTrim,
  systemFontLeadingTrim: () => systemFontLeadingTrim,
  systemMonoFontLeadingTrim: () => systemMonoFontLeadingTrim
});
module.exports = __toCommonJS(src_exports);
function leadingTrim({
  lineHeight,
  reference,
  correction = {}
}) {
  const correctionTop = (correction == null ? void 0 : correction.top) || 0;
  const correctionBottom = (correction == null ? void 0 : correction.bottom) || 0;
  const topCropHeight = Math.max(
    reference.topCrop + (lineHeight - reference.lineHeight) * (reference.fontSize / 2),
    0
  ) / reference.fontSize;
  const bottomCropHeight = Math.max(
    reference.bottomCrop + (lineHeight - reference.lineHeight) * (reference.fontSize / 2),
    0
  ) / reference.fontSize;
  return {
    lineHeight,
    display: "block",
    "&::before, &::after": {
      content: '""',
      display: "block",
      height: 0,
      width: 0,
      paddingTop: "1px"
      // To avoid collapsing
    },
    "&::before": {
      marginBottom: `calc(-${topCropHeight}em - 1px + ${correctionTop}px)`
    },
    "&::after": {
      marginTop: `calc(-${bottomCropHeight}em - 1px + ${correctionBottom}px)`
    }
  };
}
var systemFontReference = {
  topCrop: 11,
  bottomCrop: 10,
  fontSize: 32,
  lineHeight: 1.4
};
function systemFontLeadingTrim({
  lineHeight,
  correction
}) {
  return leadingTrim({
    lineHeight,
    reference: systemFontReference,
    correction
  });
}
var systemMonoFontReference = {
  topCrop: 10,
  bottomCrop: 11,
  fontSize: 32,
  lineHeight: 1.4
};
function systemMonoFontLeadingTrim({
  lineHeight,
  correction
}) {
  return leadingTrim({
    lineHeight,
    reference: systemMonoFontReference,
    correction
  });
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  leadingTrim,
  systemFontLeadingTrim,
  systemMonoFontLeadingTrim
});
