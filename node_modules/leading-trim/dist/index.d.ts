type Reference = {
    topCrop: number;
    bottomCrop: number;
    lineHeight: number;
    fontSize: number;
};
type Correction = {
    top?: number;
    bottom?: number;
};
interface Params {
    lineHeight: number;
    reference: Reference;
    correction?: Correction;
}
declare function leadingTrim({ lineHeight, reference, correction, }: Params): {
    lineHeight: number;
    display: string;
    "&::before, &::after": {
        content: string;
        display: string;
        height: number;
        width: number;
        paddingTop: string;
    };
    "&::before": {
        marginBottom: string;
    };
    "&::after": {
        marginTop: string;
    };
};
type SystemFontLeadingTrimParams = Omit<Params, "reference">;
declare function systemFontLeadingTrim({ lineHeight, correction, }: SystemFontLeadingTrimParams): {
    lineHeight: number;
    display: string;
    "&::before, &::after": {
        content: string;
        display: string;
        height: number;
        width: number;
        paddingTop: string;
    };
    "&::before": {
        marginBottom: string;
    };
    "&::after": {
        marginTop: string;
    };
};
declare function systemMonoFontLeadingTrim({ lineHeight, correction, }: SystemFontLeadingTrimParams): {
    lineHeight: number;
    display: string;
    "&::before, &::after": {
        content: string;
        display: string;
        height: number;
        width: number;
        paddingTop: string;
    };
    "&::before": {
        marginBottom: string;
    };
    "&::after": {
        marginTop: string;
    };
};

export { leadingTrim, systemFontLeadingTrim, systemMonoFontLeadingTrim };
